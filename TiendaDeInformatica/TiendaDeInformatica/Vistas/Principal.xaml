<Window x:Class="TiendaDeInformatica.Vistas.Principal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TiendaDeInformatica.Vistas"
        mc:Ignorable="d"
        Title="Principal" Height="720" Width="1280"

        x:Name="Principal_Vista"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
        xmlns:converters="clr-namespace:TiendaDeInformatica.Vistas.Converters"
        Foreground="{DynamicResource MaterialDesignBody}"
        Background="Black"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{StaticResource MaterialDesignFont}">
    <Grid>
        <Grid Background="{DynamicResource MaterialDesignPaper}" Opacity="0.95"/>

        <Grid>
            <Grid.Resources>
                <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="240"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Contenido -->
            <Grid Grid.Column="1">
                <Grid x:Name="Contenido_Grid"/>

                <materialDesign:ComboBoxPopup x:Name="MenuProductos_Popup" PlacementTarget="{Binding ElementName=Productos_ListBoxItem}" Placement="Right" AllowsTransparency="True" MouseLeave="MenuProductos_Popup_MouseLeave" PopupAnimation="Fade">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="9"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <materialDesign:PackIcon Grid.Column="0" Kind="MenuLeft" Width="44" Height="44" Margin="-16 0 0 0" Foreground="{DynamicResource MaterialDesignCardBackground}" VerticalAlignment="Top"/>

                        <materialDesign:Card Grid.Column="1" Width="196" MinHeight="150" Padding="0 8 0 8" Margin="0 0 16 16" Background="{DynamicResource MaterialDesignCardBackground}" materialDesign:ShadowAssist.ShadowDepth="Depth0">
                            <materialDesign:Card.Effect>
                                <DropShadowEffect ShadowDepth="4" Opacity="0.08" BlurRadius="8"/>
                            </materialDesign:Card.Effect>
                            <ListBox x:Name="Productos_ListBox" ItemContainerStyle="{StaticResource MaterialDesignListBoxItemMod}" SelectionChanged="Productos_ListBox_SelectionChanged">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Padding="16 3 16 3"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </materialDesign:Card>
                    </Grid>
                </materialDesign:ComboBoxPopup>

                <!-- Menu superior -->
                <Grid VerticalAlignment="Top" Height="56" HorizontalAlignment="Right" Background="{DynamicResource PrimaryHueMidBrush}" Width="108">

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <!-- Presupuesto seleccionado -->
                        <materialDesign:PopupBox x:Name="PresupuestoSeleccionado_PopupBox" PlacementMode="BottomAndAlignRightEdges" Margin="10" StaysOpen="True">
                            <materialDesign:PopupBox.ToggleContent>
                                <materialDesign:PackIcon x:Name="PresupuestoSeleccionado_Icon" Width="24" Height="24" Foreground="White" Kind="FileDocumentBoxRemove"/>
                            </materialDesign:PopupBox.ToggleContent>

                            <Grid>
                                <!-- No hay presupuesto seleccionado -->
                                <StackPanel x:Name="NoHayPresupuestoSeleccionado_StackPanel" Margin="24 16 24 16">
                                    <TextBlock FontSize="14" Text="No hay ningún presupuesto seleccionado" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <!-- Hay presupuesto seleccionado -->
                                <ListBox x:Name="PresupuestoSeleccionado_ListBox" Visibility="Collapsed" ItemContainerStyle="{StaticResource MaterialDesignListBoxItemPresupuestoSeleccionado}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="24 12 24 12" Width="264">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <Grid Grid.Row="0" Margin="0 0 0 8">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>

                                                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                                                        <TextBlock Text="Presupuesto #" FontSize="14" FontWeight="SemiBold"/>
                                                        <TextBlock Text="{Binding Id}" FontSize="14" FontWeight="SemiBold"/>
                                                    </StackPanel>

                                                    <Button Grid.Column="1" x:Name="DeseleccionarPresupuesto_Button" Style="{StaticResource MaterialDesignFlatButton}" Content="Deseleccionar" FontSize="13" VerticalAlignment="Bottom" Click="DeseleccionarPresupuesto_Button_Click"/>
                                                </Grid>

                                                <Separator Grid.Row="1" Margin="-24 0 -24 0" VerticalAlignment="Center"/>

                                                <!-- Productos -->
                                                <ListBox Grid.Row="2" Margin="-24 0 -24 0">
                                                    <!-- Formato de los items -->
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid Margin="24 8 24 8">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="64"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <!-- Imagen -->
                                                                <Image Grid.Column="0" Width="64" Height="64"/>
                                                                <!-- Marca y Modelo -->
                                                                <TextBlock Grid.Column="1" Text="{Binding Titulo}" FontSize="13" FontWeight="SemiBold" VerticalAlignment="Center" Margin="8 0 0 0"/>
                                                                <!-- Precio -->
                                                                <StackPanel Orientation="Horizontal">
                                                                    <TextBlock Grid.Column="2" Text="$" FontSize="16" VerticalAlignment="Center"/>
                                                                    <TextBlock Grid.Column="2" Text="{Binding Precio}" FontSize="16" VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>

                                                <!-- No hay productos en el presupuesto -->
                                                <StackPanel Grid.Row="2" HorizontalAlignment="Center" Margin="0 16 0 16">
                                                    <materialDesign:PackIcon Kind="PackageVariant" Width="32" Height="32" HorizontalAlignment="Center" Opacity="0.9"/>
                                                    <TextBlock Grid.Column="2" Text="No hay productos en el presupuesto" FontSize="13" Margin="0 8 0 0"/>

                                                    <StackPanel.Style>
                                                        <Style TargetType="{x:Type StackPanel}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <!-- Cambiar el texto dependiendo del modo seleccionado -->
                                                                <DataTrigger Binding="{Binding Text, ElementName=PresupuestoSeleccionado_CantidadProductos_TextBlock}" Value="0">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </StackPanel.Style>
                                                </StackPanel>

                                                <Separator Grid.Row="3" Margin="-24 0 -24 0" VerticalAlignment="Center"/>

                                                <Grid Grid.Row="4" Margin="0 12 0 0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Button Grid.Column="0" Style="{StaticResource MaterialDesignFlatButton}" Content="RESUMEN"/>

                                                    <StackPanel Grid.Column="1" HorizontalAlignment="Right">
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock x:Name="PresupuestoSeleccionado_CantidadProductos_TextBlock" Text="0" FontSize="14" Margin="0 0 0 8"/>
                                                            <TextBlock Text=" Productos" FontSize="14" Margin="0 0 0 8"/>
                                                        </StackPanel>

                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                            <TextBlock Text="Total: $" FontSize="16" />
                                                            <TextBlock Text="{Binding PrecioTotal}" FontSize="16"/>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                        </materialDesign:PopupBox>

                        <!-- Preferencias -->
                        <materialDesign:PopupBox x:Name="Preferencias_PopupBox" PlacementMode="BottomAndAlignRightEdges" StaysOpen="True" Margin="10" Closed="Preferencias_PopupBox_Closed" Foreground="White">
                            <StackPanel Width="291">
                                <!-- Tema -->
                                <Expander x:Name="TemaOscuro_Expander" Expanded="TemaOscuro_Expander_Expanded" VirtualizingPanel.IsVirtualizing="True">
                                    <Expander.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Brightness4" Width="24" Height="24" Margin="0 0 12 0"/>
                                            <TextBlock FontSize="14" Text="Tema oscuro: " VerticalAlignment="Center"/>
                                            <TextBlock FontSize="14" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Text" Value="desactivado" />
                                                        <Style.Triggers>
                                                            <!-- Cambiar el texto dependiendo del modo seleccionado -->
                                                            <DataTrigger Binding="{Binding IsChecked, ElementName=TemaOscuro_ToggleButton}" Value="True">
                                                                <Setter Property="Text" Value="activado" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </Expander.Header>

                                    <StackPanel Orientation="Vertical" Margin="24,8,24,16">
                                        <TextBlock Opacity=".7" FontSize="14" Text="El tema oscuro es perfecto para descansar la vista o para utilizarlo en ambientes sin mucha iluminación." TextWrapping="Wrap" />
                                        <Grid Margin="0 24 0 0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Column="0" Opacity=".68" FontSize="14" Text="TEMA OSCURO"/>
                                            <ToggleButton Grid.Column="1" x:Name="TemaOscuro_ToggleButton" HorizontalAlignment="Right" Checked="TemaOscuro_ToggleButton_SelectionChanged" Unchecked="TemaOscuro_ToggleButton_SelectionChanged"/>
                                        </Grid>
                                    </StackPanel>

                                    <Expander.Style>
                                        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource MaterialDesignExpander}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Style.Triggers>
                                                <!-- Cambiar el color de fondo cuando el Expander está comprimido y al pasar el mouse por encima -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsExpanded, ElementName=TemaOscuro_Expander}" Value="False"/>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=TemaOscuro_Expander}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Expander.Style>
                                </Expander>

                                <Separator Height="14"/>

                                <!-- Colores -->
                                <Expander x:Name="PersonalizarTema_Expander" Expanded="PersonalizarTema_Expander_Expanded" VirtualizingPanel.IsVirtualizing="True">
                                    <Expander.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ColorLens" Width="24" Height="24" Margin="0 0 12 0"/>
                                            <TextBlock FontSize="14" Text="Personalizar tema" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Expander.Header>
                                    <StackPanel Orientation="Vertical" Margin="24,8,24,16">
                                        <TextBlock Opacity=".68" FontSize="14" Text="Selecciona el color que más te guste o el que más se adecúe a tu tienda!" TextWrapping="Wrap" />

                                        <TextBlock Opacity=".68" FontSize="14" TextWrapping="Wrap" Margin="0 24 0 0">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Text" Value="PALETA DE COLORES" />
                                                    <Style.Triggers>
                                                        <!-- Cambiar el texto dependiendo del tipo de color seleccionado -->
                                                        <DataTrigger Binding="{Binding IsChecked, ElementName=Colores_ToggleButton}" Value="True">
                                                            <Setter Property="Text" Value="COLORES PERSONALIZADOS" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- Colores Personalizados -->
                                        <materialDesign:ColorPicker Margin="0 16 0 0" Height="176" x:Name="ColorTema_ColorPicker" PreviewMouseUp="ColorTema_ColorPicker_PreviewMouseUp" VirtualizingPanel.IsVirtualizing="True">
                                            <materialDesign:ColorPicker.Style>
                                                <Style TargetType="{x:Type materialDesign:ColorPicker}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <!-- Cambiar la visibilidad dependiendo del tipo de color seleccionado -->
                                                        <DataTrigger Binding="{Binding IsChecked, ElementName=Colores_ToggleButton}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </materialDesign:ColorPicker.Style>
                                        </materialDesign:ColorPicker>

                                        <!-- Paleta de Colores -->
                                        <StackPanel Margin="0 8 0 16">
                                            <WrapPanel x:Name="PaletaColores_WrapPanel">
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#FAFAFA" Foreground="#BDBDBD"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#F5F5F5" Foreground="#BDBDBD"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#BDBDBD"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#616161"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#212121"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#000000" Margin="0 8 -8 0"/>

                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#F44336"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#E91E63"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#9C27B0"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#673AB7"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#3F51B5"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#2196F3" Margin="0 8 -8 0"/>

                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#03A9F4"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#00BCD4"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#009688"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#4CAF50"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#8BC34A"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#CDDC39" Margin="0 8 -8 0"/>

                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#FFEB3B"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#FFC107"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#FF9800"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#FF5722"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#795548"/>
                                                <RadioButton Checked="CambiarColorTema" Unchecked="CambiarColorTema" Style="{StaticResource MaterialDesignRadioButtonPaletaColores}" Background="#607D8B" Margin="0 8 -8 0"/>
                                            </WrapPanel>

                                            <StackPanel.Style>
                                                <Style TargetType="{x:Type StackPanel}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <!-- Cambiar la visibilidad dependiendo del tipo de color seleccionado -->
                                                        <DataTrigger Binding="{Binding IsChecked, ElementName=Colores_ToggleButton}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                        </StackPanel>

                                        <Grid Margin="0 4 0 0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="40"/>
                                            </Grid.ColumnDefinitions>

                                            <ToggleButton Grid.Column="0" x:Name="Colores_ToggleButton" Unchecked="Colores_ToggleButton_Unchecked" VerticalAlignment="Center" HorizontalAlignment="Left" Opacity=".68" Foreground="{DynamicResource MaterialDesignBody}" Style="{StaticResource MaterialDesignActionToggleButton}" Background="Transparent">
                                                <ToggleButton.Content>
                                                    <materialDesign:PackIcon Height="24" Width="24" Kind="ViewGrid"/>
                                                </ToggleButton.Content>
                                                <materialDesign:ToggleButtonAssist.OnContent>
                                                    <materialDesign:PackIcon Height="24" Width="24" Kind="SelectColor"/>
                                                </materialDesign:ToggleButtonAssist.OnContent>
                                            </ToggleButton>

                                            <TextBox Grid.Column="1" x:Name="ColorHex_TextBox" Padding="-12" Height="32" materialDesign:HintAssist.IsFloating="False" TextAlignment="Center" Style="{StaticResource MaterialDesignFilledTextFieldTextBox}" FontSize="14" TextChanged="ColorHex_TextBox_TextChanged" MaxLength="7"/>
                                            <Rectangle Grid.Column="2" RadiusX="4" RadiusY="4" Width="32" Height="32" HorizontalAlignment="Right" Fill="{Binding Color, ElementName=ColorTema_ColorPicker, Converter={StaticResource ColorToBrushConverter}}"/>
                                        </Grid>
                                    </StackPanel>

                                    <Expander.Style>
                                        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource MaterialDesignExpander}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Style.Triggers>
                                                <!-- Cambiar el color de fondo cuando el Expander está comprimido y al pasar el mouse por encima -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsExpanded, ElementName=PersonalizarTema_Expander}" Value="False"/>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PersonalizarTema_Expander}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Expander.Style>
                                </Expander>
                            </StackPanel>
                        </materialDesign:PopupBox>
                    </StackPanel>
                </Grid>
            </Grid>

            <!-- Menu Izquierdo -->
            <Grid Grid.Column="0" Background="{DynamicResource MaterialDesignCardBackground}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="56"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Logo -->
                <materialDesign:ColorZone x:Name="Logo_Grid" Grid.Row="0" VerticalAlignment="Stretch" Background="{DynamicResource PrimaryHueMidBrush}" materialDesign:ShadowAssist.ShadowDepth="Depth2" materialDesign:ShadowAssist.ShadowEdges="Bottom">
                    <Grid>
                        <Image x:Name="Logo_Image" Margin="24 4 24 4">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Opacity" Value="1"/>
                                    <Style.Triggers>
                                        <!-- Cambiar la opacidad al pasar el mouse por encima -->
                                        <DataTrigger Binding="{Binding ElementName=Logo_Grid, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Opacity" Value="0.25" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>

                        <!-- Fondo -->
                        <Grid Background="White" Opacity="0.26">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <!-- Cambiar la visibilidad al pasar el mouse por encima -->
                                        <DataTrigger Binding="{Binding ElementName=Logo_Grid, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>

                        <!-- PopupBox -->
                        <materialDesign:PopupBox x:Name="Logo_PopupBox" PlacementMode="BottomAndAlignCentres" HorizontalAlignment="Center" Margin="10">
                            
                            <materialDesign:PopupBox.ToggleContent>
                                <materialDesign:PackIcon Kind="PhotoCamera" Width="24" Height="24" Foreground="White"/>
                            </materialDesign:PopupBox.ToggleContent>

                            <!-- Opciones -->
                            <StackPanel>
                                <Button x:Name="AgregarModificarLogo_Button" Height="40" Click="AgregarModificarLogo_Button_Click">
                                    <Button.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Width="24" Height="24" Margin="0 0 12 0" Opacity="0.9">
                                                <materialDesign:PackIcon.Style>
                                                    <Style TargetType="materialDesign:PackIcon">
                                                        <Setter Property="Kind" Value="InsertPhoto"/>
                                                        <Style.Triggers>
                                                            <!-- Cambiar el icono dependiendo de si hay una imagen -->
                                                            <DataTrigger Binding="{Binding ElementName=Logo_Image, Path=Source}" Value="{x:Null}">
                                                                <Setter Property="Kind" Value="ImagePlus" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </materialDesign:PackIcon.Style>
                                            </materialDesign:PackIcon>

                                            <TextBlock FontSize="14" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Text" Value="Modificar imagen"/>
                                                        <Style.Triggers>
                                                            <!-- Cambiar el texto dependiendo de si hay una imagen -->
                                                            <DataTrigger Binding="{Binding ElementName=Logo_Image, Path=Source}" Value="{x:Null}">
                                                                <Setter Property="Text" Value="Agregar imagen" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="EliminarLogo_Button" Height="40" Click="EliminarLogo_Button_Click">
                                    <Button.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Delete" Width="24" Height="24" Margin="0 0 12 0" Opacity="0.9"/>
                                            <TextBlock FontSize="14" Text="Eliminar imagen" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Button.Content>

                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignPopupBoxButton}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <!-- Cambiar el texto dependiendo de si hay una imagen -->
                                                <DataTrigger Binding="{Binding ElementName=Logo_Image, Path=Source}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>

                            <materialDesign:PopupBox.Style>
                                <Style TargetType="materialDesign:PopupBox">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <!-- Cambiar la visibilidad al pasar el mouse por encima -->
                                        <DataTrigger Binding="{Binding ElementName=Logo_Grid, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </materialDesign:PopupBox.Style>
                        </materialDesign:PopupBox>
                    </Grid>
                </materialDesign:ColorZone>

                <!-- Menú izquierdo -->
                <Grid Grid.Row="1">
                    <ListBox x:Name="MenuIzquierdo" SelectionChanged="MenuIzquierdo_SelectionChanged" SelectedIndex="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" Padding="0 12 0 0">
                        <ListViewItem Height="44" Style="{StaticResource MaterialDesignListBoxItemMod}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="FileDocumentBox" Width="24" Height="24" VerticalAlignment="Center" Margin="24 0 24 0" Opacity="0.9"/>
                                <TextBlock Text="Presupuestos" VerticalAlignment="Center"/>
                            </StackPanel>
                        </ListViewItem>

                        <ListBoxItem Height="44" Style="{StaticResource MaterialDesignListBoxItemMod}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ClipboardPerson" Width="24" Height="24" VerticalAlignment="Center" Margin="24 0 24 0" Opacity="0.9"/>
                                <TextBlock Text="Clientes" VerticalAlignment="Center"/>
                            </StackPanel>
                        </ListBoxItem>

                        <ListBoxItem Height="44" Style="{StaticResource MaterialDesignListBoxItemMod}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Ticket" Width="24" Height="24" VerticalAlignment="Center" Margin="24 0 24 0" Opacity="0.9"/>
                                <TextBlock Text="Marcas" VerticalAlignment="Center"/>
                            </StackPanel>
                        </ListBoxItem>

                        <Separator Margin="-8 0 -8 0"/>

                        <ListBoxItem Height="44" Style="{StaticResource MaterialDesignListBoxItemMod}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ProgressCheck" Width="24" Height="24" VerticalAlignment="Center" Margin="24 0 24 0" Opacity="0.9"/>
                                <TextBlock Text="Equipos armados" VerticalAlignment="Center"/>
                            </StackPanel>
                        </ListBoxItem>

                        <ListBoxItem Height="44" Style="{StaticResource MaterialDesignListBoxItemMod}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ProgressWrench" Width="24" Height="24" VerticalAlignment="Center" Margin="24 0 24 0" Opacity="0.9"/>
                                <TextBlock Text="Configuración guiada" VerticalAlignment="Center"/>
                            </StackPanel>
                        </ListBoxItem>

                        <ListBoxItem x:Name="Productos_ListBoxItem" Height="44" Padding="0" Style="{StaticResource MaterialDesignListBoxItemMod}" MouseEnter="Productos_ListBoxItem_MouseEnter" MouseLeave="Productos_ListBoxItem_MouseLeave">
                            <Grid Height="44" Width="240">
                                <Grid x:Name="ProductosBackground_Grid" Background="{DynamicResource MaterialDesignDivider}">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Style.Triggers>
                                                <Trigger Property="Visibility" Value="Visible">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.2"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                </Grid>
                                
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="PackageVariant" Width="24" Height="24" VerticalAlignment="Center" Margin="32 0 24 0" Opacity="0.9"/>
                                    <TextBlock Text="Productos" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                        </ListBoxItem>

                        <Separator Margin="-8 0 -8 0"/>
                    </ListBox>
                </Grid>
            </Grid>
        </Grid>

        <!-- Mensajes -->
        <Grid Visibility="{Binding IsActive, ElementName=Mensaje_Snackbar}">
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="0" BlurRadius="8" Opacity="0.3"/>
            </Grid.Effect>
            <materialDesign:Snackbar x:Name="Mensaje_Snackbar" VerticalAlignment="Top" HorizontalAlignment="Right" Background="White" ActionButtonStyle="{StaticResource MaterialDesignSnackbarActionMidButton}" Margin="0 72 16 0">
                <materialDesign:SnackbarMessage x:Name="Mensaje_SnackbarMessage" Foreground="#212121" FontFamily="Roboto" Content="Mensaje" ActionContent="ACEPTAR" ActionClick="Mensaje_SnackbarMessage_ActionClick"/>
            </materialDesign:Snackbar>
        </Grid>

        <!-- Oscurecer pantalla -->
        <materialDesign:DialogHost x:Name="OscurecerPantalla_DialogHost" Margin="0 -22 0 0">
            <materialDesign:DialogHost.DialogContent>
                <Grid x:Name="OscurecerPantalla_Grid" Background="{DynamicResource MaterialDesignPaper}"/>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>
    </Grid>
</Window>
